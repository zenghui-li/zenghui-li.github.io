[{"title":"DDNS(动态域名解析)实现思路","url":"/2019/11/07/DDNS-blog/","content":"<h1 id=\"curl-命令介绍\"><a href=\"#curl-命令介绍\" class=\"headerlink\" title=\"curl 命令介绍\"></a>curl 命令介绍</h1><p>cURL是一个利用URL语法在命令行下工作的文件传输工具，1997年首次发行。它支持文件上传和下载，所以是综合传输工具，但按传统，习惯称cURL为下载工具。cURL还包含了用于程序开发的libcurl。<br>详情参照<a href=\"https://baike.baidu.com/item/curl/10098606?fr=aladdin\">百度百科</a></p>\n<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><p><strong>获得页面：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl  http://www.baidu.com</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/blog_img/d7429f83c6fc8a5e7897deccdeebccb3.png\" alt=\"结果\"><br>这是最简单的使用方法。用这个命令获得了<a href=\"http://curl.haxx.se指向的页面,同样,如果这里的url指向的是一个文件或者一幅图都可以直接下载到本地.如果下载的是html文档,那么缺省的将只显示文件头部,即html文档的header.要全部显示,请加参数/\">http://curl.haxx.se指向的页面，同样，如果这里的URL指向的是一个文件或者一幅图都可以直接下载到本地。如果下载的是HTML文档，那么缺省的将只显示文件头部，即HTML文档的header。要全部显示，请加参数</a> -i，要只显示头部，用参数 -I。任何时候，可以使用 -v 命令看curl是怎样工作的，它向服务器发送的所有命令都会显示出来。为了断点续传，可以使用-r参数来指定传输范围。</p>\n<p><strong>下面进入正题——</strong></p>\n<h1 id=\"获取你自己的公网IP\"><a href=\"#获取你自己的公网IP\" class=\"headerlink\" title=\"获取你自己的公网IP\"></a>获取你自己的公网IP</h1><p><strong>在这里需要特别强调一下，你要确保你的宽带ip是公网IP地址，你可以通过检查路由器或者光猫IP是不是与<a href=\"http://www.cip.cc/\">IP网站</a>或者<a href=\"http://ipv4.icanhazip.com/\">http://ipv4.icanhazip.com/</a>（或者百度直接搜索IP看到的那个IP就是你的外网IP）获取到的一致来判断,如果不一致说明网络服务商那边给你的是内网IP,电信的一般直接打电话找10000可以要求他们将你的IP改回公网IP（一般是动态的，静态的都是专线，费用也是很昂贵的，接下来就是解决动态的问题）,据说联通和移动没有这个业务，在你拥有公网IP之后就可以进行下面的操作了</strong></p>\n<h2 id=\"首先\"><a href=\"#首先\" class=\"headerlink\" title=\"首先\"></a>首先</h2><p>这里有一个免费的外网IP获取网站<a href=\"http://www.cip.cc/\">cip.cc</a>或者<a href=\"http://ipv4.icanhazip.com/\">http://ipv4.icanhazip.com/</a><br><img src=\"/img/blog_img/6a159cd60efe7f100ccc23c0fadaab4c.png\" alt=\"ip网站\"><br>我这边的话用的是Linux系统，一般来说DDNS的话应该是做自己的服务器才需要搭建，所以下面就用Linux下为例来说明</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># curl cip.cc     ip的详细信息</span><br><span class=\"line\"># curl ip.cip.cc  只有ip</span><br></pre></td></tr></table></figure>\n<p><img src=\"/img/blog_img/3117cac66de4027524134ab07253ff7d.png\" alt=\"ip详情\"><br>至此我们已经有办法获取自己的外网ip地址了</p>\n<h1 id=\"内网穿透\"><a href=\"#内网穿透\" class=\"headerlink\" title=\"内网穿透\"></a>内网穿透</h1><p>接下来我们要做的就是去用脚本实现动态检测ip变化,<del>这部分可以等博主后期更新，或者去网上找教程，先不详细说明。</del></p>\n<p><strong>更新一个简单的办法，直接用 tplink的路由器（带 ddns 功能的）可以免费注册账号，在路由器上登录账号就可以内网穿透，完全免费。</strong></p>\n<p>如果是搭建服务器用的话，要将主机的地址在路由器上进行端口号和MAC地址的绑定。一般在路由器管理界面很容易找到，不再赘述。</p>\n<h1 id=\"更新域名解析\"><a href=\"#更新域名解析\" class=\"headerlink\" title=\"更新域名解析\"></a>更新域名解析</h1><p>有了外网IP之后可以通过周期性的向IP地址查询网站发送IP查询（第二步）并与上一次查询记录进行比较，如果外网IP变动则去调用<a href=\"https://www.dnspod.cn/docs/records.html#dns\">DNSpod官方给出的API</a>去动态更新你的域名解析地址。<br><img src=\"/img/blog_img/3e4073631a17be2283c3c94719ee7ebb.png\" alt=\"API\"></p>\n<p><strong>这样便可以实现DDNS</strong></p>\n","categories":["服务器"],"tags":["DDNS","Centos"]},{"title":"VMware Fusion 安装Windows11跳过TPM加密","url":"/2024/05/31/VMware-Fusion-window11-install1/","content":"<blockquote>\n<p>TPM加密会导致Windows11的运行性能下降，包括挂起，启动速度都会变慢</p>\n</blockquote>\n<ol>\n<li>首先是创建虚拟机，前提是你已经下载好了Windows11的镜像文件</li>\n<li>在跳出的设置里面选择Windows11的镜像文件，并连接驱动器<img src=\"/img/blog_img/6abf07deab534ea7bd865910b460d415.png\" alt=\"选择镜像\"></li>\n<li>然后在启动里面选择CD然后重新启动，按任意键开始进入镜像安装</li>\n<li>接下来要注意了，等待安装结束开始重启时，你要断开CD驱动器，不然的话它又会从CD启动，这个和物理机上安装系统时一个道理，相当于你选择的启动介质</li>\n<li>等待重启之后你会看到这个页面，这里要注意，不要进行任何操作，连点都不要点（因为你前面做了对操作的加密，你现在如果操作，就会可能导致启动不了），接下来是重点，<strong>直接从虚拟机选项上选择关机</strong><img src=\"/img/blog_img/eb078b55bb4b43f2a7295e73d44f684f.png\" alt=\"页面\"></li>\n<li>关机之后是重点，这个操作要求虚拟机关机之后才可以做，<strong>直接移除，然后再在设置里面的加密选择不加密，输入你前面设置的密码，等待解密结束</strong><img src=\"/img/blog_img/b99b940f6b8348019560a42070b2de57.png\" alt=\"移除模块\"></li>\n<li>然后启动位置选硬盘，重新启动，这之后就不用担心加密导致系统出问题了<img src=\"/img/blog_img/81d98706d7c246d08beb519b4888f93c.png\" alt=\"启动盘\"></li>\n<li>如果遇到Windows11无法联网的问题，可以参考<a href=\"https://blog.csdn.net/gouxiu0231/article/details/139354578?spm=1001.2014.3001.5501\">另一篇帖子</a></li>\n<li>如果遇到问题可以在评论区评论，或者私信我都可以，看到之后会回复</li>\n</ol>\n","categories":["Windows"],"tags":["Windows11"]},{"title":"MacOS M系列芯片VMware Fusion安装Windows11的无法联网问题","url":"/2024/05/31/VMware-Fusion-window11-install2/","content":"<blockquote>\n<p>先放一张图，下文是针对这个问题的解决办法<br>ps:你可能需要解决虚拟机性能的问题，如果发现你的虚拟机，启动，挂起速度很慢的话，可以参考我的另一篇文章<a href=\"https://blog.csdn.net/gouxiu0231/article/details/139363461\">VMware Fusion 安装Windows11跳过TPM加密</a></p>\n</blockquote>\n<p><img src=\"/img/blog_img/192fc9f6cd9d4c0e82ba6bca1549bb9f.png\" alt=\"无法联网\"></p>\n<ol>\n<li><p>当你卡在这个页面时，按住mac上的 shift + control + F3（如果有Fn的话Fn也按住）</p>\n</li>\n<li><p>接下来就是见证奇迹的时刻，你会发现进入了Windows预设的厂家系统，桌面上会有个小窗口，先不要关</p>\n</li>\n<li><p>进入系统之后你需要做的是找到VMware状态栏（最上方的小苹果后面的那行）然后找到虚拟机那栏，然后安装VMware Tools<img src=\"/img/blog_img/9300bd270e13487cbbdd874d321314fb.png\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>等待安装完毕，点刚才弹出的那个小窗口上的重启系统<img src=\"/img/blog_img/63f10a227e714036a70ed550557a8ab9.png\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>重启之后应该就能联网配置了，记得连接你虚拟机的网络适配器</p>\n</li>\n</ol>\n","categories":["Windows"],"tags":["Windows11","MacOS"]},{"title":"CentOS 7、8操作系统版本结束了生命周期后yum下载源失效的解决办法","url":"/2024/08/09/centos-yum-origin-outofdate/","content":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>本人自建的服务器早期安装了Centos7的系统，但是最近使用过程中发现centos7已经在2024年6月30日，生命周期结束，官方不再进行支持维护，如果使用官方yum源下载环境服务，就会报下列的问题，从下面情况来看就是<a href=\"http://mirrorlist.centos.org已经解析不到了,我后面用浏览器访问了一下,确实网站已经关闭了./\">http://mirrorlist.centos.org已经解析不到了，我后面用浏览器访问了一下，确实网站已经关闭了。</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Loaded plugins: fastestmirror</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\">Could not retrieve mirrorlist http://mirrorlist.centos.org?<span class=\"built_in\">arch</span>=x86_64&amp;release=7&amp;repo=sclo-rh error was</span><br><span class=\"line\">14: curl#6 - <span class=\"string\">&quot;Could not resolve host: mirrorlist.centos.org; Unknown error&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> One of the configured repositories failed (Unknown),</span><br><span class=\"line\"> and yum doesn<span class=\"string\">&#x27;t have enough cached data to continue. At this point the only</span></span><br><span class=\"line\"><span class=\"string\"> safe thing yum can do is fail. There are a few ways to work &quot;fix&quot; this:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">     1. Contact the upstream for the repository and get them to fix the problem.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">     2. Reconfigure the baseurl/etc. for the repository, to point to a working</span></span><br><span class=\"line\"><span class=\"string\">        upstream. This is most often useful if you are using a newer</span></span><br><span class=\"line\"><span class=\"string\">        distribution release than is supported by the repository (and the</span></span><br><span class=\"line\"><span class=\"string\">        packages for the previous distribution release still work).</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">     3. Run the command with the repository temporarily disabled</span></span><br><span class=\"line\"><span class=\"string\">            yum --disablerepo=&lt;repoid&gt; ...</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">     4. Disable the repository permanently, so yum won&#x27;</span>t use it by default. Yum</span><br><span class=\"line\">        will <span class=\"keyword\">then</span> just ignore the repository <span class=\"keyword\">until</span> you permanently <span class=\"built_in\">enable</span> it</span><br><span class=\"line\">        again or use --enablerepo <span class=\"keyword\">for</span> temporary usage:</span><br><span class=\"line\"></span><br><span class=\"line\">            yum-config-manager --<span class=\"built_in\">disable</span> &lt;repoid&gt;</span><br><span class=\"line\">        or</span><br><span class=\"line\">            subscription-manager repos --<span class=\"built_in\">disable</span>=&lt;repoid&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">     5. Configure the failing repository to be skipped, <span class=\"keyword\">if</span> it is unavailable.</span><br><span class=\"line\">        Note that yum will try to contact the repo. when it runs most commands,</span><br><span class=\"line\">        so will have to try and fail each time (and thus. yum will be be much</span><br><span class=\"line\">        slower). If it is a very temporary problem though, this is often a <span class=\"built_in\">nice</span></span><br><span class=\"line\">        compromise:</span><br><span class=\"line\"></span><br><span class=\"line\">            yum-config-manager --save --<span class=\"built_in\">setopt</span>=&lt;repoid&gt;.skip_if_unavailable=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">Cannot find a valid baseurl <span class=\"keyword\">for</span> repo: centos-sclo-rh/x86_64</span><br></pre></td></tr></table></figure>\n<p><strong>那么问题就来了！</strong><br><strong>怎么使用yum???</strong></p>\n<p>你肯定是这样想的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>\n<p>然后再清理缓存，我刚开始也是这么弄的，但是发现依然没什么卵用，它还是会出现上面的问题，接下来我折腾了两天。</p>\n<p>下面讲讲具体怎么解决的</p>\n<ol>\n<li><strong>备份</strong></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><strong>下载新的 CentOS-Base.repo 到 &#x2F;etc&#x2F;yum.repos.d&#x2F;</strong></li>\n</ol>\n<p><strong>centos8（centos8官方源已下线，建议切换centos-vault源）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo</span><br></pre></td></tr></table></figure>\n<p><strong>centos6（centos6官方源已下线，建议切换centos-vault源）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-6.10.repo</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-6.10.repo</span><br></pre></td></tr></table></figure>\n<p><strong>CentOS 7</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><strong>运行 yum makecache 生成缓存</strong><br>这里可能依然会出现上面的</li>\n</ol>\n<blockquote>\n<p>Could not retrieve mirrorlist <a href=\"http://mirrorlist.centos.org/?arch=x86_64&release=7&repo=sclo-rh\">http://mirrorlist.centos.org?arch=x86_64&amp;release=7&amp;repo=sclo-rh</a></p>\n</blockquote>\n<ol start=\"4\">\n<li><strong>接下来查找一下mirrorlist相关的内容</strong></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">grep -r <span class=\"string\">&#x27;mirrorlist&#x27;</span> /etc/yum.repos.d/</span><br></pre></td></tr></table></figure>\n<p>你可能会得到类似的结果</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">/etc/yum.repos.d/CentOS-CR.repo:# NOTE: We <span class=\"keyword\">do</span> not use a mirrorlist <span class=\"keyword\">for</span> the CR repos, to ensure content is available</span><br><span class=\"line\">/etc/yum.repos.d/CentOS-Sources.repo:# If the mirrorlist= does not work <span class=\"keyword\">for</span> you, as a fall back you can try the </span><br><span class=\"line\">/etc/yum.repos.d/CentOS-fasttrack.repo:mirrorlist=http://mirrorlist.centos.org/?release=<span class=\"variable\">$releasever</span>&amp;<span class=\"built_in\">arch</span>=<span class=\"variable\">$basearch</span>&amp;repo=fasttrack&amp;infra=<span class=\"variable\">$infra</span></span><br><span class=\"line\">/etc/yum.repos.d/CentOS-x86_64-kernel.repo:mirrorlist=http://mirrorlist.centos.org/?release=<span class=\"variable\">$releasever</span>&amp;<span class=\"built_in\">arch</span>=<span class=\"variable\">$basearch</span>&amp;repo=kernel&amp;infra=<span class=\"variable\">$infra</span></span><br><span class=\"line\">/etc/yum.repos.d/CentOS-x86_64-kernel.repo:mirrorlist=http://mirrorlist.centos.org/?release=<span class=\"variable\">$releasever</span>&amp;<span class=\"built_in\">arch</span>=<span class=\"variable\">$basearch</span>&amp;repo=experimental&amp;infra=<span class=\"variable\">$infra</span></span><br><span class=\"line\">/etc/yum.repos.d/CentOS-SCLo-scl-rh.repo:mirrorlist=http://mirrorlist.centos.org?<span class=\"built_in\">arch</span>=<span class=\"variable\">$basearch</span>&amp;release=7&amp;repo=sclo-rh</span><br><span class=\"line\">/etc/yum.repos.d/CentOS-SCLo-scl.repo:mirrorlist=http://mirrorlist.centos.org?<span class=\"built_in\">arch</span>=<span class=\"variable\">$basearch</span>&amp;release=7&amp;repo=sclo-sclo</span><br><span class=\"line\">/etc/yum.repos.d/CentOS-Base.repo:# If the mirrorlist= does not work <span class=\"keyword\">for</span> you, as a fall back you can try the </span><br></pre></td></tr></table></figure>\n<p>接下来一个一个就打开这些repo文件，记得<strong>sudo</strong>，因为这些文件权限比较高具体怎么修改就不一一展示了，下面举一个例子说明</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/yum.repos.d/ <span class=\"comment\">#先进入那个文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> <span class=\"comment\">#查看当前路径下的目录</span></span><br></pre></td></tr></table></figure>\n<p>然后你就能看到下面这一堆</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">CentOS-Base.repo       CentOS-SCLo-scl-rh.repo    epel-testing.repo</span><br><span class=\"line\">CentOS-CR.repo         CentOS-Sources.repo        mysql-community.repo</span><br><span class=\"line\">CentOS-Debuginfo.repo  CentOS-Vault.repo          mysql-community-source.repo</span><br><span class=\"line\">CentOS-fasttrack.repo  CentOS-x86_64-kernel.repo  nodesource-nodejs.repo</span><br><span class=\"line\">CentOS-Media.repo      docker-ce.repo             nodesource-nsolid.repo</span><br><span class=\"line\">CentOS-SCLo-scl.repo   epel.repo</span><br></pre></td></tr></table></figure>\n<p>接着是说明示例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> vim CentOS-SCLo-scl-rh.repo <span class=\"comment\">#或者切到root用户，就不用sudo了</span></span><br></pre></td></tr></table></figure>\n<p>打开之后你就能看到下面这个，你看到的可能和这个些许不同，应该第8行是注释掉的，第9行是没注释的，接下来把第9行这个mirrorlist注释掉，然后把第8行的**<del>mirror.centos.org</del> ** 直接替换成<strong>mirrors.aliyun.com</strong> ，后面的不动，这里是因为centos的源已经关掉了。</p>\n<p><strong>以此类推，把与mirrorlist有关的源都这样替换，并注释掉mirrorlist行</strong></p>\n<blockquote>\n<p>貌似还有个办法就是上面说的打开   <strong>vault源</strong><br>就是设置 <strong>enabled&#x3D;1</strong> ，这个方法我没有去验证，你们可以试下，可行的话可以在评论区留言</p>\n</blockquote>\n<p><img src=\"/img/blog_img/04447c777c9647c98a028b87f4bd301e.jpeg\" alt=\"打开之后的图片\"><br>5. <strong>上面这些修改完成之后，清理一下yum缓存</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li><strong>然后重新生成缓存</strong></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>\n\n<p>然后应该你就能看到yum又正常工作了<br><img src=\"/img/blog_img/d7e562f823d64174b1b1ae7822e52308.png\" alt=\"正常工作展示\"></p>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><ol>\n<li><strong>阿里云ecs用户可参考下面的方法</strong></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class=\"line\">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.aliyuncs.com/repo/Centos-vault-8.5.2111.repo</span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/mirrors.cloud.aliyuncs.com/url_tmp/g&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo &amp;&amp; sed -i <span class=\"string\">&#x27;s/mirrors.aliyun.com/mirrors.cloud.aliyuncs.com/g&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo &amp;&amp; sed -i <span class=\"string\">&#x27;s/url_tmp/mirrors.aliyun.com/g&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br><span class=\"line\">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><strong>刚安装的Centos 7,8等已经停止维护的Centos系统版本可能需要先进行上面的一系列操作，才能使用yum工具，我在别的社区看到有人说遇到了这种情况，进入了死循环，没有yum下载不了wegt和curl，那可能就需要你到阿里云镜像的地址下载下来然后传到服务器上去覆盖</strong></li>\n</ol>\n<blockquote>\n<p>&#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo</p>\n</blockquote>\n<h2 id=\"最后，欢迎下方留言\"><a href=\"#最后，欢迎下方留言\" class=\"headerlink\" title=\"最后，欢迎下方留言\"></a>最后，欢迎下方留言</h2>","categories":["服务器"],"tags":["Centos","yum"]},{"title":"MacOS终端设置代理解决homebrew、git等国外源下载慢、无法访问等问题","url":"/2024/08/14/macos-prxoy-setting/","content":"<h1 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h1><blockquote>\n<p>有时候使用终端进行开发软件的安装，以及git拉取仓库代码，由于很多开发工具的源都在国外，下载速度会很慢，甚至有时候无法访问，而且终端不会共享使用全局代理，需要额外配置。</p>\n</blockquote>\n<h1 id=\"1-设置-HTTP-代理\"><a href=\"#1-设置-HTTP-代理\" class=\"headerlink\" title=\"1. 设置 HTTP 代理\"></a>1. 设置 HTTP 代理</h1><h2 id=\"临时设置代理\"><a href=\"#临时设置代理\" class=\"headerlink\" title=\"临时设置代理\"></a>临时设置代理</h2><p>在终端中执行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://&lt;proxy-server&gt;:&lt;port&gt;</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=http://&lt;proxy-server&gt;:&lt;port&gt;</span><br></pre></td></tr></table></figure>\n<p>将 <strong>proxy-server</strong> 替换为你的代理服务器地址，<strong>port</strong> 替换为代理端口。</p>\n<ul>\n<li><strong>proxy-server：</strong> 一般是127.0.0.1，就是本地地址。</li>\n<li><strong>port：</strong> 具体你的工具是哪个端口自己看一下代理工具。</li>\n</ul>\n<p><strong>永久设置代理</strong></p>\n<p>将代理配置添加到你的 Shell 配置文件（例如 ~&#x2F;.zshrc 或 ~&#x2F;.bash_profile），以便每次终端启动时自动应用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export http_proxy=http://&lt;proxy-server&gt;:&lt;port&gt;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export https_proxy=http://&lt;proxy-server&gt;:&lt;port&gt;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>如果你使用的是 bash，则将其添加到 ~&#x2F;.bash_profile 中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export http_proxy=http://&lt;proxy-server&gt;:&lt;port&gt;&#x27;</span> &gt;&gt; ~/.bash_profile</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export https_proxy=http://&lt;proxy-server&gt;:&lt;port&gt;&#x27;</span> &gt;&gt; ~/.bash_profile</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<h1 id=\"2-检查代理设置\"><a href=\"#2-检查代理设置\" class=\"headerlink\" title=\"2. 检查代理设置\"></a>2. 检查代理设置</h1><p>确认代理设置是否正确，可以使用以下命令检查环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$http_proxy</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$https_proxy</span></span><br></pre></td></tr></table></figure>\n<p>看一下输出结果是不是你的代理地址和端口。</p>\n<h1 id=\"3-特殊情况\"><a href=\"#3-特殊情况\" class=\"headerlink\" title=\"3.特殊情况\"></a>3.特殊情况</h1><p>如果你使用的代理需要认证（用户名和密码），可以将其添加到代理 URL 中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://username:password@&lt;proxy-server&gt;:&lt;port&gt;</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=http://username:password@&lt;proxy-server&gt;:&lt;port&gt;</span><br></pre></td></tr></table></figure>\n<p>注意：在 URL 中包含用户名和密码可能存在安全风险，请谨慎处理。</p>\n<h1 id=\"4-清除代理设置\"><a href=\"#4-清除代理设置\" class=\"headerlink\" title=\"4.清除代理设置\"></a>4.清除代理设置</h1><p>如果你不再需要代理，可以通过取消设置环境变量来移除代理配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">unset</span> http_proxy</span><br><span class=\"line\"><span class=\"built_in\">unset</span> https_proxy</span><br></pre></td></tr></table></figure>\n<p>将这些命令添加到你的 Shell 配置文件中并重新加载配置：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;unset http_proxy&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;unset https_proxy&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>通过设置 HTTP 和 HTTPS 代理，你就可以git拉取无法拉取的公司仓库了。如果遇到任何问题或需要进一步帮助，请评论区或者私信告诉我！</p>\n","categories":["MacOS"],"tags":["代理","终端"]},{"title":"关于","url":"/about/index.html","content":""},{"title":"分类","url":"/categories/index.html","content":""},{"title":"友情链接","url":"/link/index.html","content":""},{"title":"标签","url":"/tags/index.html","content":""}]